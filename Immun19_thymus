# single cell pre-processing on AGM sample
# 2021-4-24
# CHAO Yiming

# Single-Cell RNA Sequencing Resolves Spatiotemporal Development of Pre-thymic Lymphoid Progenitors and Thymus Organogenesis in Human Embryos
# GSE133341
# GSM3906000
# SRR9602493 SRR9602494 SRR9602495

# download fastq raw data
nohup fastq-dump --split-3 SRR9602493 &

# rename fastq file
mv SRR9602493_1.fastq AGM_S1_L001_R1_001.fastq
mv SRR9602493_2.fastq AGM_S1_L001_R2_001.fastq

# run cellranger count
nohup cellranger count --id=AGM --fastqs=/home/yiming/AGM/sra/ --sample=AGM --transcriptome=/home/yiming/reference/refdata-gex-GRCh38-2020-A &
# [error] Pipestance failed. Error log at:
# AGM/SC_RNA_COUNTER_CS/SC_MULTI_CORE/MULTI_CHEMISTRY_DETECTOR/_GEM_WELL_CHEMISTRY_DETECTOR/DETECT_COUNT_CHEMISTRY/fork0/chnk0-u843387ac2d/_errors
# Log message:
# An extremely low rate of correct barcodes was observed for all the candidate chemistry choices for the input: Sample AGM in "/home/yiming/AGM/sra". Please check your input data.
# - 0.1% for chemistry SC3Pv3
# - 0.1% for chemistry SC5P-PE
# - 0.1% for chemistry SC3Pv2
# - 0.0% for chemistry SC3Pv3LT



# another try

# Single-Cell RNA Sequencing Resolves Spatiotemporal Development of Pre-thymic Lymphoid Progenitors and Thymus Organogenesis in Human Embryos
# GSE133341
# GSM3906001
# SRR9602496 SRR9602497 SRR9602498 SRR9602499

# download fastq raw data
nohup fastq-dump --split-3 SRR9602497 &

# rename fastq file
mv SRR9602497_1.fastq liver_S1_L002_R1_001.fastq
mv SRR9602497_2.fastq liver_S1_L002_R2_001.fastq

# run cellranger count
nohup cellranger count --id=liver --fastqs=/home/yiming/liver/sra/ --sample=liver --transcriptome=/home/yiming/reference/refdata-cellranger-GRCh38-3.0.0 &
# success

# download the web summary file
# from local machine, set sftp
get /home/yiming/liver/cellranger_run/liver/outs/web_summary.html /Users/guagua/Downloads

# decompress the expression matrix
cd /home/yiming/liver/cellranger_run/liver/outs/filtered_feature_bc_matrix
gunzip barcodes.tsv.gz
gunzip features.tsv.gz
gunzip matrix.mtx.gz

# download three matirx files
get /home/yiming/liver/cellranger_run/liver/outs/filtered_feature_bc_matrix/barcodes.tsv /Users/guagua/Downloads
get /home/yiming/liver/cellranger_run/liver/outs/filtered_feature_bc_matrix/features.tsv /Users/guagua/Downloads
get /home/yiming/liver/cellranger_run/liver/outs/filtered_feature_bc_matrix/matrix.mtx /Users/guagua/Downloads


# directly working in server [fail]
R
library(Matrix)
matrix_dir = "/home/yiming/liver/cellranger_run/liver/outs/filtered_feature_bc_matrix"
barcode.path <- paste0(matrix_dir, "barcodes.tsv") 
features.path <- paste0(matrix_dir, "features.tsv") 
matrix.path <- paste0(matrix_dir, "matrix.mtx")
mat <- readMM(file = matrix.path)



# run STAR alignment on liver sample
nohup STAR --runThreadN 16 \
		   --genomeDir /home/yiming/reference/GRCh38_DNA_primary_assembly_index \
		   --readFilesIn /home/yiming/liver/sra/liver_S1_L002_R1_001.fastq /home/yiming/liver/sra/liver_S1_L002_R2_001.fastq &
# Apr 26 22:09:47 ..... started STAR run
# Apr 26 22:09:47 ..... loading genome
# Apr 26 22:10:10 ..... started mapping
# Apr 26 22:11:28 ..... finished mapping
# Apr 26 22:11:33 ..... finished successfully
#                                Started job on |       Apr 26 22:09:47
#                            Started mapping on |       Apr 26 22:10:10
#                                   Finished on |       Apr 26 22:11:33
#      Mapping speed, Million of reads per hour |       108.95
#
#                         Number of input reads |       2511799
#                     Average input read length |       300
#                                   UNIQUE READS:
#                  Uniquely mapped reads number |       674977
#                       Uniquely mapped reads % |       26.87%
#                         Average mapped length |       245.66
#                      Number of splices: Total |       243943
#           Number of splices: Annotated (sjdb) |       240741
#                      Number of splices: GT/AG |       241369
#                      Number of splices: GC/AG |       1065
#                      Number of splices: AT/AC |       51
#              Number of splices: Non-canonical |       1458
#                     Mismatch rate per base, % |       2.73%
#                        Deletion rate per base |       0.01%
#                       Deletion average length |       1.64
#                       Insertion rate per base |       0.01%
#                      Insertion average length |       1.24
#                            MULTI-MAPPING READS:
#       Number of reads mapped to multiple loci |       66765
#            % of reads mapped to multiple loci |       2.66%
#       Number of reads mapped to too many loci |       103
#            % of reads mapped to too many loci |       0.00%
#                                 UNMAPPED READS:
# Number of reads unmapped: too many mismatches |       0
#      % of reads unmapped: too many mismatches |       0.00%
#           Number of reads unmapped: too short |       1769736
#                % of reads unmapped: too short |       70.46%
#               Number of reads unmapped: other |       218
#                    % of reads unmapped: other |       0.01%
#                                 CHIMERIC READS:
#                      Number of chimeric reads |       0
#                           % of chimeric reads |       0.00%



# run STARsolo on liver sample
nohup STAR --runThreadN 16 \
		   --genomeDir /home/yiming/reference/GRCh38_DNA_primary_assembly_index \
		   --readFilesIn /home/yiming/liver/sra/liver_S1_L002_R2_001.fastq /home/yiming/liver/sra/liver_S1_L002_R1_001.fastq \
		   --soloType Droplet &
# EXITING because of FATAL ERROR in INPUT parameters: --soloCBwhitelist is not defined
# SOLUTION: in --soloCBwhitelist specify path to and name of the whitelist file, or None for CB demultiplexing without whitelist


# liver sample 1
nohup fastq-dump --split-3 SRR9602496 &
mv SRR9602496_1.fastq liver_S1_L001_R1_001.fastq
mv SRR9602496_2.fastq liver_S1_L001_R2_001.fastq

# run cellranger
cellranger count --id=liver --fastqs=/home/yiming/liver1/sra/ --sample=liver --transcriptome=/home/yiming/reference/refdata-gex-GRCh38-2020-A

# download summary report
get /home/yiming/liver1/cellranger_run/liver/outs/web_summary.html /Users/guagua/Downloads

# download matrix
gunzip barcodes.tsv.gz features.tsv.gz matrix.mtx.gz
get /home/yiming/liver1/cellranger_run/liver/outs/filtered_feature_bc_matrix/barcodes.tsv /Users/guagua/Downloads
get /home/yiming/liver1/cellranger_run/liver/outs/filtered_feature_bc_matrix/features.tsv /Users/guagua/Downloads
get /home/yiming/liver1/cellranger_run/liver/outs/filtered_feature_bc_matrix/matrix.mtx /Users/guagua/Downloads


# download other two liver samples and rearrange in four lanes
nohup fastq-dump --split-3 SRR9602498 &
nohup fastq-dump --split-3 SRR9602499 &
mv SRR9602498_1.fastq liver_S1_L003_R1_001.fastq
mv SRR9602498_2.fastq liver_S1_L003_R2_001.fastq
mv SRR9602499_1.fastq liver_S1_L004_R1_001.fastq
mv SRR9602499_2.fastq liver_S1_L004_R2_001.fastq

cellranger count --id=liver --fastqs=/home/yiming/liver_sample/sra/ --sample=liver --transcriptome=/home/yiming/reference/refdata-gex-GRCh38-2020-A
# Waiting 6 seconds for UI to do final refresh.
# Pipestance completed successfully!
# 2021-05-04 13:31:06 Shutting down.

# decompress the files and download to local machine
gunzip barcodes.tsv.gz features.tsv.gz matrix.mtx.gz 
get /home/yiming/liver_sample/cellranger_run/liver/outs/web_summary.html /Users/guagua/Downloads
get /home/yiming/liver_sample/cellranger_run/liver/outs/filtered_feature_bc_matrix/barcodes.tsv /Users/guagua/Downloads
get /home/yiming/liver_sample/cellranger_run/liver/outs/filtered_feature_bc_matrix/features.tsv /Users/guagua/Downloads
get /home/yiming/liver_sample/cellranger_run/liver/outs/filtered_feature_bc_matrix/matrix.mtx /Users/guagua/Downloads


# run velocyto
velocyto run10x /home/yiming/liver_sample/cellranger_run/liver /home/yiming/reference/refdata-gex-GRCh38-2020-A/genes/genes.gtf
# ERROR - Can not locate the barcodes.tsv file!

velocyto run10x /home/yiming/liver_sample/cellranger_run/liver/outs /home/yiming/reference/refdata-gex-GRCh38-2020-A/genes/genes.gtf
# 2021-05-16 19:36:22,456 - ERROR - This is an older version of cellranger, cannot check if the output are ready, make sure of this yourself
# 2021-05-16 19:36:22,456 - ERROR - Can not locate the barcodes.tsv file!

velocyto run10x /home/yiming/liver_sample/cellranger_run/liver/outs/filtered_feature_bc_matrix /home/yiming/reference/refdata-gex-GRCh38-2020-A/genes/genes.gtf
# 2021-05-16 19:38:42,529 - ERROR - This is an older version of cellranger, cannot check if the output are ready, make sure of this yourself
# 2021-05-16 19:38:42,529 - ERROR - Can not locate the barcodes.tsv file!


velocyto run /home/yiming/liver_sample/cellranger_run/liver /home/yiming/reference/refdata-gex-GRCh38-2020-A/genes/genes.gtf
# Usage: velocyto run [OPTIONS] BAMFILE... GTFFILE
# Try 'velocyto run --help' for help.
# Error: Invalid value for 'BAMFILE...': File '/home/yiming/liver_sample/cellranger_run/liver' is a directory.

velocyto run /home/yiming/liver_sample/cellranger_run/liver/outs/filtered_feature_bc_matrix/barcodes.tsv /home/yiming/liver_sample/cellranger_run/liver/outs/possorted_genome_bam.bam /home/yiming/reference/refdata-gex-GRCh38-2020-A/genes/genes.gtf
# 2021-05-16 19:55:40,561 - WARNING - Several input files but --onefilepercell is False. Each bam file will be interpreted as containing a SET of cells!!!
# 2021-05-16 19:55:40,561 - WARNING - When using mutliple files you may want to use --sampleid option to specify the name of the output file
# 2021-05-16 19:55:40,561 - INFO - No SAMPLEID specified, the sample will be called multi_input_barcodes_possorted_genome_bam_and_others_E802V (last 5 digits are a random-id to avoid overwriting some other file by mistake)
# 2021-05-16 19:55:40,561 - INFO - No OUTPUTFOLDER specified, find output files inside /home/yiming/liver_sample/cellranger_run/liver/outs/filtered_feature_bc_matrix/velocyto
# 2021-05-16 19:55:40,561 - DEBUG - Using logic: Default
# 2021-05-16 19:55:40,561 - DEBUG - Cell barcodes will be determined while reading the .bam file
# 2021-05-16 19:55:40,586 - DEBUG - Peeking into /home/yiming/liver_sample/cellranger_run/liver/outs/filtered_feature_bc_matrix/barcodes.tsv

velocyto run /home/yiming/liver_sample/cellranger_run/liver/outs/possorted_genome_bam.bam /home/yiming/reference/refdata-gex-GRCh38-2020-A/genes/genes.gtf
# forget to set -o output file direction, /home/yiming/liver_sample/cellranger_run/liver/outs/filtered_feature_bc_matrix/velocyto, /home/yiming/liver_sample/cellranger_run/liver/outs/velocyto
# 2021-05-17 13:40:45,278 - DEBUG - 8138581 reads were skipped because no apropiate cell or umi barcode was found









velocyto run -o /home/yiming/liver_sample/velocyto_run /home/yiming/liver_sample/cellranger_run/liver/outs/possorted_genome_bam.bam /home/yiming/reference/refdata-gex-GRCh38-2020-A/genes/genes.gtf

nohup velocyto run -o /home/yiming/liver_sample/velocyto_run /home/yiming/liver_sample/cellranger_run/liver/outs/possorted_genome_bam.bam /home/yiming/reference/refdata-gex-GRCh38-2020-A/genes/genes.gtf &


/home/yiming/liver_sample/cellranger_run/liver/outs/filtered_feature_bc_matrix


/home/yiming/liver_sample/velocyto_run


/home/yiming/reference/refdata-gex-GRCh38-2020-A/genes/genes.gtf




####################################
# Single cell RNA-seq downstream analysis
# Paper: Single-Cell RNA Sequencing Resolves Spatiotemporal Development of Pre-thymic Lymphoid Progenitors and Thymus Organogenesis in Human Embryos
# Dataset: GSE133341_GSM3906001_SRR*4
# 2021-4-25 Yiming
####################################

install.packages('Seurat')
installed.packages('patchwork')
reticulate::py_install(packages ='umap-learn')
install.packages("scSorter")
BiocManager::install("destiny")
install.packages("plotly")



library(Matrix)
library(dplyr)
library(Seurat)
library(patchwork)
library(scSorter)
library(destiny)
library(plotly)


rm(list = ls())
setwd("/usersdata/yiming/liver_sample/cellranger_run/liver/outs/filtered_feature_bc_matrix")

# construct matrix after cellranger

mat <- readMM(file = "matrix.mtx")

feature.names = read.delim("features.tsv",
                           header = FALSE,
                           stringsAsFactors = FALSE)
barcode.names = read.delim("barcodes.tsv",
                           header = FALSE,
                           stringsAsFactors = FALSE)

colnames(mat) = barcode.names $ V1
rownames(mat) = feature.names $ V2

# setup Seurat object

# Initialize the Seurat object with the raw (non-normalized data).
liver <- CreateSeuratObject(counts = mat, project = "liver", min.cells = 3, min.features = 100)
liver

# quality control
# The [[ operator can add columns to object metadata. This is a great place to stash QC stats
liver[["percent.mt"]] <- PercentageFeatureSet(liver, pattern = "^MT-")

# Visualize QC metrics as a violin plot
VlnPlot(liver, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)

# FeatureScatter is typically used to visualize feature-feature relationships, but can be used
# for anything calculated by the object, i.e. columns in object metadata, PC scores etc.
plot1 <- FeatureScatter(liver, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(liver, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2

liver <- subset(liver, subset = nFeature_RNA > 200 & nFeature_RNA < 4000 & percent.mt < 5)

# normalization 
liver <- NormalizeData(liver, normalization.method = "LogNormalize", scale.factor = 10000)

liver <- FindVariableFeatures(liver, selection.method = "vst", nfeatures = 2000)

# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(liver), 10)

# plot variable features with and without labels
plot1 <- VariableFeaturePlot(liver)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot1 + plot2

# scaling data
all.genes <- rownames(liver)
liver <- ScaleData(liver, features = all.genes)

# dimension reduction
liver <- RunPCA(liver, features = VariableFeatures(object = liver))

# Examine and visualize PCA results a few different ways
print(liver[["pca"]], dims = 1:5, nfeatures = 5)

VizDimLoadings(liver, dims = 1:2, reduction = "pca")

DimPlot(liver, reduction = "pca")

DimHeatmap(liver, dims = 1, cells = 500, balanced = TRUE)
DimHeatmap(liver, dims = 1:15, cells = 500, balanced = TRUE)




# cell clusters
liver <- FindNeighbors(liver, dims = 1:10)
liver <- FindClusters(liver, resolution = 0.5)

# Look at cluster IDs of the first 5 cells
head(Idents(liver), 5)


# UMAP
liver <- RunUMAP(liver, dims = 1:10)
DimPlot(liver, reduction = "umap")

# tSNE visualization
set.seed(1)
liver <- RunTSNE(liver, reduction = "pca", dims = 1:20, dim.embed=3)
dim(liver@reductions$tsne)

tmp.tsne.3<-Embeddings(object = liver[["tsne"]])
cb_palette <- c("#ed1299", "#09f9f5", "#246b93", "#cc8e12", "#d561dd", "#c93f00", "#ddd53e","#4aef7b", 
                "#e86502", "#9ed84e", "#39ba30", "#6ad157", "#8249aa", "#99db27", "#e07233", "#ff523f",
                "#ce2523", "#f7aa5d", "#cebb10", "#03827f", "#931635", "#373bbf", "#a1ce4c", "#ef3bb6", 
                "#d66551","#1a918f", "#ff66fc", "#2927c4", "#7149af" ,"#57e559" ,"#8e3af4" ,"#f9a270" ,
                "#22547f", "#db5e92","#edd05e", "#6f25e8", "#0dbc21", "#280f7a", "#6373ed", "#5b910f" ,
                "#7b34c1" ,"#0cf29a","#d80fc1","#dd27ce", "#07a301", "#167275", "#391c82", "#2baeb5",
                "#925bea", "#63ff4f")

cb_palette.use <- cb_palette[1:length(unique(liver$seurat_clusters))]
col_match <- data.frame(cluster=unique(liver$seurat_clusters),col=cb_palette.use)
col_draw<- col_match[match(liver$seurat_clusters,col_match[,1]),2]

tmp.tsne.3 <- as.data.frame(tmp.tsne.3)
fig <- plot_ly(tmp.tsne.3, x = ~tSNE_1, y = ~tSNE_2, z = ~tSNE_3, color =liver$seurat_clusters, colors = cb_palette.use,size=2)
fig


# differential expression

# find all markers of cluster 2
cluster2.markers <- FindMarkers(liver, ident.1 = 2, min.pct = 0.25)
head(cluster2.markers, n = 5)

# find all markers distinguishing cluster 1 from clusters 0 and 2
cluster1.markers <- FindMarkers(liver, ident.1 = 1, ident.2 = c(0, 2), min.pct = 0.25)
head(cluster1.markers, n = 5)

# find markers for every cluster compared to all remaining cells, report only the positive ones
liver.markers <- FindAllMarkers(liver, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
liver.markers %>% group_by(cluster) %>% top_n(n = 2, wt = avg_log2FC)

cluster0.markers <- FindMarkers(liver, ident.1 = 0, logfc.threshold = 0.25, test.use = "roc", only.pos = TRUE)

VlnPlot(liver, features = c("HBB", "HBM","SPINK2","HBD","ARL6IP1","MPO","C1QB","JCHAIN","IGFBP3","HBZ","CD34","PRDX2","NPM1","PPBP","CRHBP","CD14","	
PLN","RBP7"))

FeaturePlot(liver, features = c("CD34","MYB","IL7R","CD7","LEF1","TCF7"))
FeaturePlot(liver, features = c("HBB", "HBM","SPINK2","HBD","ARL6IP1","MPO","C1QB","JCHAIN","IGFBP3","HBZ","CD34","PRDX2","NPM1","PPBP","CRHBP","CD14","MYL7","RBP7"))

top10 <- liver.markers %>% group_by(cluster) %>% top_n(n = 10, wt = avg_log2FC)
DoHeatmap(liver, features = top10$gene) + NoLegend()


# assigning cell type

new.cluster.ids <- c("Hepatocytes", "Hepatic stellate cells", "Kupffer cells", "Liver sinusoidal endothelial cells", "Platelet","T","B","Monocyte","Red blood cells","Macrophages","hematopoietic stem cells","Fibroblast","white blood cells")
names(new.cluster.ids) <- levels(liver)
liver <- RenameIdents(liver, new.cluster.ids)
DimPlot(liver, reduction = "umap", label = TRUE, pt.size = 0.5) + NoLegend()


# diffusion map after log normalization

as.data.frame(liver, genes = Seurat::VariableFeatures(liver))

liver_matrix <- as.matrix(liver@assays[["RNA"]]@counts)
dm <- DiffusionMap(liver_matrix)






library(clusterProfiler)
library(ggplot2)
library(org.Hs.eg.db)

top10 <- head(VariableFeatures(liver), 10)
top20 <- head(VariableFeatures(liver), 20)
top30 <- head(VariableFeatures(liver), 30)
top50 <- head(VariableFeatures(liver), 50)
top75 <- head(VariableFeatures(liver), 75)

genelist <- matrix(top75, ncol=1)
genelist <- as.table(genelist)
genelist2<- bitr(genelist,fromType="SYMBOL",toType=c("ENTREZID","GENENAME"),OrgDb=org.Hs.eg.db)

go.all<- enrichGO(gene=genelist2$ENTREZID, 
                  OrgDb = org.Hs.eg.db, 
                  ont='ALL', #ont='BP'
                  pAdjustMethod = 'BH',
                  pvalueCutoff = 0.01, 
                  qvalueCutoff = 0.2,
                  keyType = 'ENTREZID')

dotplot(go.all,showCategory = 10, size = NULL,font.size = 12, title = "GO enrichment", split = "ONTOLOGY") + facet_grid(ONTOLOGY ~ ., scales = "free")

heatplot(go.all)

kk.diff <- enrichKEGG(gene         = genelist2$ENTREZID,
                      organism     = 'hsa',
                      pvalueCutoff = 0.01,
                      qvalueCutoff = 0.2 )

dotplot(kk.diff,
        showCategory = 20,
        size = NULL,
        font.size = 12,
        title = "KEGG pathway analysis",
        split = NULL)
































